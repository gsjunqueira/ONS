# coding: utf-8

"""
    API para Programação Diária de Produção (PDP).

    API do PDP para obtenção de dados e informações sobre programação diária de produção.  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from swagger_client.api_client import ApiClient


class UsinaApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def insumo_pdp_listar_geracao_proposta(self, body, **kwargs):  # noqa: E501
        """Listar a geração proposta por Usina em base semi-horária.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.insumo_pdp_listar_geracao_proposta(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param GeracaoPropostaRequest body: Parâmetros de requisição (required)
        :return: GeracaoPropostaResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.insumo_pdp_listar_geracao_proposta_with_http_info(body, **kwargs)  # noqa: E501
        else:
            (data) = self.insumo_pdp_listar_geracao_proposta_with_http_info(body, **kwargs)  # noqa: E501
            return data

    def insumo_pdp_listar_geracao_proposta_with_http_info(self, body, **kwargs):  # noqa: E501
        """Listar a geração proposta por Usina em base semi-horária.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.insumo_pdp_listar_geracao_proposta_with_http_info(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param GeracaoPropostaRequest body: Parâmetros de requisição (required)
        :return: GeracaoPropostaResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method insumo_pdp_listar_geracao_proposta" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params or
                params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `insumo_pdp_listar_geracao_proposta`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['Bearer']  # noqa: E501

        return self.api_client.call_api(
            '/programacao/usina/ListarGeracaoProposta', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='GeracaoPropostaResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def insumo_pdp_listar_geracao_proposta_get(self, request_ano, request_mes, request_dia, request_numero_paginacao, request_quantidade_pagina, **kwargs):  # noqa: E501
        """Listar a geração proposta por Usina em base semi-horária.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.insumo_pdp_listar_geracao_proposta_get(request_ano, request_mes, request_dia, request_numero_paginacao, request_quantidade_pagina, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param int request_ano: (Obrigatório) Data do PDP (Ano). (required)
        :param int request_mes: (Obrigatório) Data do PDP (Mês). (required)
        :param int request_dia: (Obrigatório) Data do PDP (Dia). (required)
        :param int request_numero_paginacao: (Obrigatório) Paginação: Número da página. (required)
        :param int request_quantidade_pagina: (required)
        :param list[str] request_codigos_usinas: (Opcional) Código das Usinas no PDP (Caso não informado retornará a geração de todos as usinas relacionadas ao usuário)
        :return: GeracaoPropostaGETResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.insumo_pdp_listar_geracao_proposta_get_with_http_info(request_ano, request_mes, request_dia, request_numero_paginacao, request_quantidade_pagina, **kwargs)  # noqa: E501
        else:
            (data) = self.insumo_pdp_listar_geracao_proposta_get_with_http_info(request_ano, request_mes, request_dia, request_numero_paginacao, request_quantidade_pagina, **kwargs)  # noqa: E501
            return data

    def insumo_pdp_listar_geracao_proposta_get_with_http_info(self, request_ano, request_mes, request_dia, request_numero_paginacao, request_quantidade_pagina, **kwargs):  # noqa: E501
        """Listar a geração proposta por Usina em base semi-horária.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.insumo_pdp_listar_geracao_proposta_get_with_http_info(request_ano, request_mes, request_dia, request_numero_paginacao, request_quantidade_pagina, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param int request_ano: (Obrigatório) Data do PDP (Ano). (required)
        :param int request_mes: (Obrigatório) Data do PDP (Mês). (required)
        :param int request_dia: (Obrigatório) Data do PDP (Dia). (required)
        :param int request_numero_paginacao: (Obrigatório) Paginação: Número da página. (required)
        :param int request_quantidade_pagina: (required)
        :param list[str] request_codigos_usinas: (Opcional) Código das Usinas no PDP (Caso não informado retornará a geração de todos as usinas relacionadas ao usuário)
        :return: GeracaoPropostaGETResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['request_ano', 'request_mes', 'request_dia', 'request_numero_paginacao', 'request_quantidade_pagina', 'request_codigos_usinas']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method insumo_pdp_listar_geracao_proposta_get" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'request_ano' is set
        if ('request_ano' not in params or
                params['request_ano'] is None):
            raise ValueError("Missing the required parameter `request_ano` when calling `insumo_pdp_listar_geracao_proposta_get`")  # noqa: E501
        # verify the required parameter 'request_mes' is set
        if ('request_mes' not in params or
                params['request_mes'] is None):
            raise ValueError("Missing the required parameter `request_mes` when calling `insumo_pdp_listar_geracao_proposta_get`")  # noqa: E501
        # verify the required parameter 'request_dia' is set
        if ('request_dia' not in params or
                params['request_dia'] is None):
            raise ValueError("Missing the required parameter `request_dia` when calling `insumo_pdp_listar_geracao_proposta_get`")  # noqa: E501
        # verify the required parameter 'request_numero_paginacao' is set
        if ('request_numero_paginacao' not in params or
                params['request_numero_paginacao'] is None):
            raise ValueError("Missing the required parameter `request_numero_paginacao` when calling `insumo_pdp_listar_geracao_proposta_get`")  # noqa: E501
        # verify the required parameter 'request_quantidade_pagina' is set
        if ('request_quantidade_pagina' not in params or
                params['request_quantidade_pagina'] is None):
            raise ValueError("Missing the required parameter `request_quantidade_pagina` when calling `insumo_pdp_listar_geracao_proposta_get`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'request_ano' in params:
            query_params.append(('request.ano', params['request_ano']))  # noqa: E501
        if 'request_mes' in params:
            query_params.append(('request.mes', params['request_mes']))  # noqa: E501
        if 'request_dia' in params:
            query_params.append(('request.dia', params['request_dia']))  # noqa: E501
        if 'request_numero_paginacao' in params:
            query_params.append(('request.numeroPaginacao', params['request_numero_paginacao']))  # noqa: E501
        if 'request_quantidade_pagina' in params:
            query_params.append(('request.quantidadePagina', params['request_quantidade_pagina']))  # noqa: E501
        if 'request_codigos_usinas' in params:
            query_params.append(('request.codigosUsinas', params['request_codigos_usinas']))  # noqa: E501
            collection_formats['request.codigosUsinas'] = 'multi'  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['Bearer']  # noqa: E501

        return self.api_client.call_api(
            '/programacao/usina/ListarGeracaoPropostaGET', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='GeracaoPropostaGETResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def insumo_pdp_listar_usinas_representadas(self, **kwargs):  # noqa: E501
        """Listar Usinas representadas pelo usuário.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.insumo_pdp_listar_usinas_representadas(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param list[str] request_codigos_empresas: (Opcional) Código das Empresas no PDP (Caso não informado retornará todos as usinas relacionadas ao usuário)
        :return: UsinaResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.insumo_pdp_listar_usinas_representadas_with_http_info(**kwargs)  # noqa: E501
        else:
            (data) = self.insumo_pdp_listar_usinas_representadas_with_http_info(**kwargs)  # noqa: E501
            return data

    def insumo_pdp_listar_usinas_representadas_with_http_info(self, **kwargs):  # noqa: E501
        """Listar Usinas representadas pelo usuário.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.insumo_pdp_listar_usinas_representadas_with_http_info(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param list[str] request_codigos_empresas: (Opcional) Código das Empresas no PDP (Caso não informado retornará todos as usinas relacionadas ao usuário)
        :return: UsinaResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['request_codigos_empresas']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method insumo_pdp_listar_usinas_representadas" % key
                )
            params[key] = val
        del params['kwargs']

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'request_codigos_empresas' in params:
            query_params.append(('request.codigosEmpresas', params['request_codigos_empresas']))  # noqa: E501
            collection_formats['request.codigosEmpresas'] = 'multi'  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['Bearer']  # noqa: E501

        return self.api_client.call_api(
            '/programacao/usina/ListarUsinasRepresentadas', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='UsinaResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)
