# coding: utf-8

"""
    API para Programação Diária de Produção (PDP).

    API do PDP para obtenção de dados e informações sobre programação diária de produção.  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class DadoInsumoPatamar(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'data_pdp': 'str',
        'patamar_numero': 'int',
        'patamar_hora': 'str',
        'patamar_valor_emp': 'int',
        'patamar_valor_pro': 'int',
        'patamar_valor_pre': 'int',
        'patamar_valor_sup': 'int'
    }

    attribute_map = {
        'data_pdp': 'DataPDP',
        'patamar_numero': 'PatamarNumero',
        'patamar_hora': 'PatamarHora',
        'patamar_valor_emp': 'PatamarValor_EMP',
        'patamar_valor_pro': 'PatamarValor_PRO',
        'patamar_valor_pre': 'PatamarValor_PRE',
        'patamar_valor_sup': 'PatamarValor_SUP'
    }

    def __init__(self, data_pdp=None, patamar_numero=None, patamar_hora=None, patamar_valor_emp=None, patamar_valor_pro=None, patamar_valor_pre=None, patamar_valor_sup=None):  # noqa: E501
        """DadoInsumoPatamar - a model defined in Swagger"""  # noqa: E501
        self._data_pdp = None
        self._patamar_numero = None
        self._patamar_hora = None
        self._patamar_valor_emp = None
        self._patamar_valor_pro = None
        self._patamar_valor_pre = None
        self._patamar_valor_sup = None
        self.discriminator = None
        if data_pdp is not None:
            self.data_pdp = data_pdp
        if patamar_numero is not None:
            self.patamar_numero = patamar_numero
        if patamar_hora is not None:
            self.patamar_hora = patamar_hora
        if patamar_valor_emp is not None:
            self.patamar_valor_emp = patamar_valor_emp
        if patamar_valor_pro is not None:
            self.patamar_valor_pro = patamar_valor_pro
        if patamar_valor_pre is not None:
            self.patamar_valor_pre = patamar_valor_pre
        if patamar_valor_sup is not None:
            self.patamar_valor_sup = patamar_valor_sup

    @property
    def data_pdp(self):
        """Gets the data_pdp of this DadoInsumoPatamar.  # noqa: E501


        :return: The data_pdp of this DadoInsumoPatamar.  # noqa: E501
        :rtype: str
        """
        return self._data_pdp

    @data_pdp.setter
    def data_pdp(self, data_pdp):
        """Sets the data_pdp of this DadoInsumoPatamar.


        :param data_pdp: The data_pdp of this DadoInsumoPatamar.  # noqa: E501
        :type: str
        """

        self._data_pdp = data_pdp

    @property
    def patamar_numero(self):
        """Gets the patamar_numero of this DadoInsumoPatamar.  # noqa: E501


        :return: The patamar_numero of this DadoInsumoPatamar.  # noqa: E501
        :rtype: int
        """
        return self._patamar_numero

    @patamar_numero.setter
    def patamar_numero(self, patamar_numero):
        """Sets the patamar_numero of this DadoInsumoPatamar.


        :param patamar_numero: The patamar_numero of this DadoInsumoPatamar.  # noqa: E501
        :type: int
        """

        self._patamar_numero = patamar_numero

    @property
    def patamar_hora(self):
        """Gets the patamar_hora of this DadoInsumoPatamar.  # noqa: E501


        :return: The patamar_hora of this DadoInsumoPatamar.  # noqa: E501
        :rtype: str
        """
        return self._patamar_hora

    @patamar_hora.setter
    def patamar_hora(self, patamar_hora):
        """Sets the patamar_hora of this DadoInsumoPatamar.


        :param patamar_hora: The patamar_hora of this DadoInsumoPatamar.  # noqa: E501
        :type: str
        """

        self._patamar_hora = patamar_hora

    @property
    def patamar_valor_emp(self):
        """Gets the patamar_valor_emp of this DadoInsumoPatamar.  # noqa: E501


        :return: The patamar_valor_emp of this DadoInsumoPatamar.  # noqa: E501
        :rtype: int
        """
        return self._patamar_valor_emp

    @patamar_valor_emp.setter
    def patamar_valor_emp(self, patamar_valor_emp):
        """Sets the patamar_valor_emp of this DadoInsumoPatamar.


        :param patamar_valor_emp: The patamar_valor_emp of this DadoInsumoPatamar.  # noqa: E501
        :type: int
        """

        self._patamar_valor_emp = patamar_valor_emp

    @property
    def patamar_valor_pro(self):
        """Gets the patamar_valor_pro of this DadoInsumoPatamar.  # noqa: E501


        :return: The patamar_valor_pro of this DadoInsumoPatamar.  # noqa: E501
        :rtype: int
        """
        return self._patamar_valor_pro

    @patamar_valor_pro.setter
    def patamar_valor_pro(self, patamar_valor_pro):
        """Sets the patamar_valor_pro of this DadoInsumoPatamar.


        :param patamar_valor_pro: The patamar_valor_pro of this DadoInsumoPatamar.  # noqa: E501
        :type: int
        """

        self._patamar_valor_pro = patamar_valor_pro

    @property
    def patamar_valor_pre(self):
        """Gets the patamar_valor_pre of this DadoInsumoPatamar.  # noqa: E501


        :return: The patamar_valor_pre of this DadoInsumoPatamar.  # noqa: E501
        :rtype: int
        """
        return self._patamar_valor_pre

    @patamar_valor_pre.setter
    def patamar_valor_pre(self, patamar_valor_pre):
        """Sets the patamar_valor_pre of this DadoInsumoPatamar.


        :param patamar_valor_pre: The patamar_valor_pre of this DadoInsumoPatamar.  # noqa: E501
        :type: int
        """

        self._patamar_valor_pre = patamar_valor_pre

    @property
    def patamar_valor_sup(self):
        """Gets the patamar_valor_sup of this DadoInsumoPatamar.  # noqa: E501


        :return: The patamar_valor_sup of this DadoInsumoPatamar.  # noqa: E501
        :rtype: int
        """
        return self._patamar_valor_sup

    @patamar_valor_sup.setter
    def patamar_valor_sup(self, patamar_valor_sup):
        """Sets the patamar_valor_sup of this DadoInsumoPatamar.


        :param patamar_valor_sup: The patamar_valor_sup of this DadoInsumoPatamar.  # noqa: E501
        :type: int
        """

        self._patamar_valor_sup = patamar_valor_sup

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DadoInsumoPatamar, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DadoInsumoPatamar):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
