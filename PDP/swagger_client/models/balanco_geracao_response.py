# coding: utf-8

"""
    API para Programação Diária de Produção (PDP).

    API do PDP para obtenção de dados e informações sobre programação diária de produção.  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class BalancoGeracaoResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'balanco': 'AllOfBalancoGeracaoResponseBalanco',
        'inicio_processamento': 'datetime',
        'termino_processamento': 'datetime'
    }

    attribute_map = {
        'balanco': 'Balanco',
        'inicio_processamento': 'InicioProcessamento',
        'termino_processamento': 'TerminoProcessamento'
    }

    def __init__(self, balanco=None, inicio_processamento=None, termino_processamento=None):  # noqa: E501
        """BalancoGeracaoResponse - a model defined in Swagger"""  # noqa: E501
        self._balanco = None
        self._inicio_processamento = None
        self._termino_processamento = None
        self.discriminator = None
        if balanco is not None:
            self.balanco = balanco
        self.inicio_processamento = inicio_processamento
        self.termino_processamento = termino_processamento

    @property
    def balanco(self):
        """Gets the balanco of this BalancoGeracaoResponse.  # noqa: E501

        Balanços programados por Região  # noqa: E501

        :return: The balanco of this BalancoGeracaoResponse.  # noqa: E501
        :rtype: AllOfBalancoGeracaoResponseBalanco
        """
        return self._balanco

    @balanco.setter
    def balanco(self, balanco):
        """Sets the balanco of this BalancoGeracaoResponse.

        Balanços programados por Região  # noqa: E501

        :param balanco: The balanco of this BalancoGeracaoResponse.  # noqa: E501
        :type: AllOfBalancoGeracaoResponseBalanco
        """

        self._balanco = balanco

    @property
    def inicio_processamento(self):
        """Gets the inicio_processamento of this BalancoGeracaoResponse.  # noqa: E501

        Momento em que iniciou o processamento de uma requisição.  # noqa: E501

        :return: The inicio_processamento of this BalancoGeracaoResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._inicio_processamento

    @inicio_processamento.setter
    def inicio_processamento(self, inicio_processamento):
        """Sets the inicio_processamento of this BalancoGeracaoResponse.

        Momento em que iniciou o processamento de uma requisição.  # noqa: E501

        :param inicio_processamento: The inicio_processamento of this BalancoGeracaoResponse.  # noqa: E501
        :type: datetime
        """
        if inicio_processamento is None:
            raise ValueError("Invalid value for `inicio_processamento`, must not be `None`")  # noqa: E501

        self._inicio_processamento = inicio_processamento

    @property
    def termino_processamento(self):
        """Gets the termino_processamento of this BalancoGeracaoResponse.  # noqa: E501

        Momento de término de processamento de uma requisição.  # noqa: E501

        :return: The termino_processamento of this BalancoGeracaoResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._termino_processamento

    @termino_processamento.setter
    def termino_processamento(self, termino_processamento):
        """Sets the termino_processamento of this BalancoGeracaoResponse.

        Momento de término de processamento de uma requisição.  # noqa: E501

        :param termino_processamento: The termino_processamento of this BalancoGeracaoResponse.  # noqa: E501
        :type: datetime
        """
        if termino_processamento is None:
            raise ValueError("Invalid value for `termino_processamento`, must not be `None`")  # noqa: E501

        self._termino_processamento = termino_processamento

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BalancoGeracaoResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BalancoGeracaoResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
