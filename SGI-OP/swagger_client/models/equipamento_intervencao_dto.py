# coding: utf-8

"""
    Integração com o SGI-OP

    Api de integração com os dados dos SGI-OP.  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EquipamentoIntervencaoDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'nome_equipamento': 'str',
        'nnome_curto_equipamento': 'str',
        'mrid_equipamento': 'str',
        'idoons_equipamento': 'str',
        'nome_instalacao': 'str',
        'nome_familia': 'str',
        'nome_malha': 'str',
        'principal': 'bool',
        'sofrera_manutencao': 'bool',
        'ensaio_geracao': 'bool',
        'atividade_manutencao_protecao': 'bool',
        'restricao_operativa': 'float',
        'limite_longa_duracao': 'float',
        'limite_curta_duracao': 'float'
    }

    attribute_map = {
        'nome_equipamento': 'nomeEquipamento',
        'nnome_curto_equipamento': 'nnomeCurtoEquipamento',
        'mrid_equipamento': 'mrid_Equipamento',
        'idoons_equipamento': 'idoons_Equipamento',
        'nome_instalacao': 'nomeInstalacao',
        'nome_familia': 'nomeFamilia',
        'nome_malha': 'nomeMalha',
        'principal': 'principal',
        'sofrera_manutencao': 'sofreraManutencao',
        'ensaio_geracao': 'ensaioGeracao',
        'atividade_manutencao_protecao': 'atividadeManutencaoProtecao',
        'restricao_operativa': 'restricaoOperativa',
        'limite_longa_duracao': 'limiteLongaDuracao',
        'limite_curta_duracao': 'limiteCurtaDuracao'
    }

    def __init__(self, nome_equipamento=None, nnome_curto_equipamento=None, mrid_equipamento=None, idoons_equipamento=None, nome_instalacao=None, nome_familia=None, nome_malha=None, principal=None, sofrera_manutencao=None, ensaio_geracao=None, atividade_manutencao_protecao=None, restricao_operativa=None, limite_longa_duracao=None, limite_curta_duracao=None):  # noqa: E501
        """EquipamentoIntervencaoDto - a model defined in Swagger"""  # noqa: E501
        self._nome_equipamento = None
        self._nnome_curto_equipamento = None
        self._mrid_equipamento = None
        self._idoons_equipamento = None
        self._nome_instalacao = None
        self._nome_familia = None
        self._nome_malha = None
        self._principal = None
        self._sofrera_manutencao = None
        self._ensaio_geracao = None
        self._atividade_manutencao_protecao = None
        self._restricao_operativa = None
        self._limite_longa_duracao = None
        self._limite_curta_duracao = None
        self.discriminator = None
        if nome_equipamento is not None:
            self.nome_equipamento = nome_equipamento
        if nnome_curto_equipamento is not None:
            self.nnome_curto_equipamento = nnome_curto_equipamento
        if mrid_equipamento is not None:
            self.mrid_equipamento = mrid_equipamento
        if idoons_equipamento is not None:
            self.idoons_equipamento = idoons_equipamento
        if nome_instalacao is not None:
            self.nome_instalacao = nome_instalacao
        if nome_familia is not None:
            self.nome_familia = nome_familia
        if nome_malha is not None:
            self.nome_malha = nome_malha
        if principal is not None:
            self.principal = principal
        if sofrera_manutencao is not None:
            self.sofrera_manutencao = sofrera_manutencao
        if ensaio_geracao is not None:
            self.ensaio_geracao = ensaio_geracao
        if atividade_manutencao_protecao is not None:
            self.atividade_manutencao_protecao = atividade_manutencao_protecao
        if restricao_operativa is not None:
            self.restricao_operativa = restricao_operativa
        if limite_longa_duracao is not None:
            self.limite_longa_duracao = limite_longa_duracao
        if limite_curta_duracao is not None:
            self.limite_curta_duracao = limite_curta_duracao

    @property
    def nome_equipamento(self):
        """Gets the nome_equipamento of this EquipamentoIntervencaoDto.  # noqa: E501

        Nome Longo do equipamento.  # noqa: E501

        :return: The nome_equipamento of this EquipamentoIntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._nome_equipamento

    @nome_equipamento.setter
    def nome_equipamento(self, nome_equipamento):
        """Sets the nome_equipamento of this EquipamentoIntervencaoDto.

        Nome Longo do equipamento.  # noqa: E501

        :param nome_equipamento: The nome_equipamento of this EquipamentoIntervencaoDto.  # noqa: E501
        :type: str
        """

        self._nome_equipamento = nome_equipamento

    @property
    def nnome_curto_equipamento(self):
        """Gets the nnome_curto_equipamento of this EquipamentoIntervencaoDto.  # noqa: E501

        Nome Curto do equipamento.  # noqa: E501

        :return: The nnome_curto_equipamento of this EquipamentoIntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._nnome_curto_equipamento

    @nnome_curto_equipamento.setter
    def nnome_curto_equipamento(self, nnome_curto_equipamento):
        """Sets the nnome_curto_equipamento of this EquipamentoIntervencaoDto.

        Nome Curto do equipamento.  # noqa: E501

        :param nnome_curto_equipamento: The nnome_curto_equipamento of this EquipamentoIntervencaoDto.  # noqa: E501
        :type: str
        """

        self._nnome_curto_equipamento = nnome_curto_equipamento

    @property
    def mrid_equipamento(self):
        """Gets the mrid_equipamento of this EquipamentoIntervencaoDto.  # noqa: E501

        Identificador único do equipamento.  # noqa: E501

        :return: The mrid_equipamento of this EquipamentoIntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._mrid_equipamento

    @mrid_equipamento.setter
    def mrid_equipamento(self, mrid_equipamento):
        """Sets the mrid_equipamento of this EquipamentoIntervencaoDto.

        Identificador único do equipamento.  # noqa: E501

        :param mrid_equipamento: The mrid_equipamento of this EquipamentoIntervencaoDto.  # noqa: E501
        :type: str
        """

        self._mrid_equipamento = mrid_equipamento

    @property
    def idoons_equipamento(self):
        """Gets the idoons_equipamento of this EquipamentoIntervencaoDto.  # noqa: E501

        Identificador ONS do equipamento.  # noqa: E501

        :return: The idoons_equipamento of this EquipamentoIntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._idoons_equipamento

    @idoons_equipamento.setter
    def idoons_equipamento(self, idoons_equipamento):
        """Sets the idoons_equipamento of this EquipamentoIntervencaoDto.

        Identificador ONS do equipamento.  # noqa: E501

        :param idoons_equipamento: The idoons_equipamento of this EquipamentoIntervencaoDto.  # noqa: E501
        :type: str
        """

        self._idoons_equipamento = idoons_equipamento

    @property
    def nome_instalacao(self):
        """Gets the nome_instalacao of this EquipamentoIntervencaoDto.  # noqa: E501

        Nome da instalação.  # noqa: E501

        :return: The nome_instalacao of this EquipamentoIntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._nome_instalacao

    @nome_instalacao.setter
    def nome_instalacao(self, nome_instalacao):
        """Sets the nome_instalacao of this EquipamentoIntervencaoDto.

        Nome da instalação.  # noqa: E501

        :param nome_instalacao: The nome_instalacao of this EquipamentoIntervencaoDto.  # noqa: E501
        :type: str
        """

        self._nome_instalacao = nome_instalacao

    @property
    def nome_familia(self):
        """Gets the nome_familia of this EquipamentoIntervencaoDto.  # noqa: E501

        Nome da família.  # noqa: E501

        :return: The nome_familia of this EquipamentoIntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._nome_familia

    @nome_familia.setter
    def nome_familia(self, nome_familia):
        """Sets the nome_familia of this EquipamentoIntervencaoDto.

        Nome da família.  # noqa: E501

        :param nome_familia: The nome_familia of this EquipamentoIntervencaoDto.  # noqa: E501
        :type: str
        """

        self._nome_familia = nome_familia

    @property
    def nome_malha(self):
        """Gets the nome_malha of this EquipamentoIntervencaoDto.  # noqa: E501

        Nome da malha.  # noqa: E501

        :return: The nome_malha of this EquipamentoIntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._nome_malha

    @nome_malha.setter
    def nome_malha(self, nome_malha):
        """Sets the nome_malha of this EquipamentoIntervencaoDto.

        Nome da malha.  # noqa: E501

        :param nome_malha: The nome_malha of this EquipamentoIntervencaoDto.  # noqa: E501
        :type: str
        """

        self._nome_malha = nome_malha

    @property
    def principal(self):
        """Gets the principal of this EquipamentoIntervencaoDto.  # noqa: E501

        Indica que é o equipamento principal da intervenção.  # noqa: E501

        :return: The principal of this EquipamentoIntervencaoDto.  # noqa: E501
        :rtype: bool
        """
        return self._principal

    @principal.setter
    def principal(self, principal):
        """Sets the principal of this EquipamentoIntervencaoDto.

        Indica que é o equipamento principal da intervenção.  # noqa: E501

        :param principal: The principal of this EquipamentoIntervencaoDto.  # noqa: E501
        :type: bool
        """

        self._principal = principal

    @property
    def sofrera_manutencao(self):
        """Gets the sofrera_manutencao of this EquipamentoIntervencaoDto.  # noqa: E501

        Indica que o equipamento sofrerá manutenção.  # noqa: E501

        :return: The sofrera_manutencao of this EquipamentoIntervencaoDto.  # noqa: E501
        :rtype: bool
        """
        return self._sofrera_manutencao

    @sofrera_manutencao.setter
    def sofrera_manutencao(self, sofrera_manutencao):
        """Sets the sofrera_manutencao of this EquipamentoIntervencaoDto.

        Indica que o equipamento sofrerá manutenção.  # noqa: E501

        :param sofrera_manutencao: The sofrera_manutencao of this EquipamentoIntervencaoDto.  # noqa: E501
        :type: bool
        """

        self._sofrera_manutencao = sofrera_manutencao

    @property
    def ensaio_geracao(self):
        """Gets the ensaio_geracao of this EquipamentoIntervencaoDto.  # noqa: E501

        Indica o ensaio de geração.  # noqa: E501

        :return: The ensaio_geracao of this EquipamentoIntervencaoDto.  # noqa: E501
        :rtype: bool
        """
        return self._ensaio_geracao

    @ensaio_geracao.setter
    def ensaio_geracao(self, ensaio_geracao):
        """Sets the ensaio_geracao of this EquipamentoIntervencaoDto.

        Indica o ensaio de geração.  # noqa: E501

        :param ensaio_geracao: The ensaio_geracao of this EquipamentoIntervencaoDto.  # noqa: E501
        :type: bool
        """

        self._ensaio_geracao = ensaio_geracao

    @property
    def atividade_manutencao_protecao(self):
        """Gets the atividade_manutencao_protecao of this EquipamentoIntervencaoDto.  # noqa: E501

        Indica envolvimento de atividade de manutenção de proteção.  # noqa: E501

        :return: The atividade_manutencao_protecao of this EquipamentoIntervencaoDto.  # noqa: E501
        :rtype: bool
        """
        return self._atividade_manutencao_protecao

    @atividade_manutencao_protecao.setter
    def atividade_manutencao_protecao(self, atividade_manutencao_protecao):
        """Sets the atividade_manutencao_protecao of this EquipamentoIntervencaoDto.

        Indica envolvimento de atividade de manutenção de proteção.  # noqa: E501

        :param atividade_manutencao_protecao: The atividade_manutencao_protecao of this EquipamentoIntervencaoDto.  # noqa: E501
        :type: bool
        """

        self._atividade_manutencao_protecao = atividade_manutencao_protecao

    @property
    def restricao_operativa(self):
        """Gets the restricao_operativa of this EquipamentoIntervencaoDto.  # noqa: E501

        Restrição operativa.  # noqa: E501

        :return: The restricao_operativa of this EquipamentoIntervencaoDto.  # noqa: E501
        :rtype: float
        """
        return self._restricao_operativa

    @restricao_operativa.setter
    def restricao_operativa(self, restricao_operativa):
        """Sets the restricao_operativa of this EquipamentoIntervencaoDto.

        Restrição operativa.  # noqa: E501

        :param restricao_operativa: The restricao_operativa of this EquipamentoIntervencaoDto.  # noqa: E501
        :type: float
        """

        self._restricao_operativa = restricao_operativa

    @property
    def limite_longa_duracao(self):
        """Gets the limite_longa_duracao of this EquipamentoIntervencaoDto.  # noqa: E501

        Limite de longa duração.  # noqa: E501

        :return: The limite_longa_duracao of this EquipamentoIntervencaoDto.  # noqa: E501
        :rtype: float
        """
        return self._limite_longa_duracao

    @limite_longa_duracao.setter
    def limite_longa_duracao(self, limite_longa_duracao):
        """Sets the limite_longa_duracao of this EquipamentoIntervencaoDto.

        Limite de longa duração.  # noqa: E501

        :param limite_longa_duracao: The limite_longa_duracao of this EquipamentoIntervencaoDto.  # noqa: E501
        :type: float
        """

        self._limite_longa_duracao = limite_longa_duracao

    @property
    def limite_curta_duracao(self):
        """Gets the limite_curta_duracao of this EquipamentoIntervencaoDto.  # noqa: E501

        Limite de curta duração.  # noqa: E501

        :return: The limite_curta_duracao of this EquipamentoIntervencaoDto.  # noqa: E501
        :rtype: float
        """
        return self._limite_curta_duracao

    @limite_curta_duracao.setter
    def limite_curta_duracao(self, limite_curta_duracao):
        """Sets the limite_curta_duracao of this EquipamentoIntervencaoDto.

        Limite de curta duração.  # noqa: E501

        :param limite_curta_duracao: The limite_curta_duracao of this EquipamentoIntervencaoDto.  # noqa: E501
        :type: float
        """

        self._limite_curta_duracao = limite_curta_duracao

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EquipamentoIntervencaoDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EquipamentoIntervencaoDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
