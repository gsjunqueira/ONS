# coding: utf-8

"""
    Integração com o SGI-OP

    Api de integração com os dados dos SGI-OP.  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class IntervencaoDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'numero_ons': 'str',
        'numero_agente': 'str',
        'data_hora_solicitacao': 'datetime',
        'situacao': 'str',
        'nome_centro_responsavel': 'str',
        'nome_agente_solicitante': 'str',
        'nome_agente_responsavel': 'str',
        'malha': 'str',
        'servicos': 'str',
        'observacoes': 'str',
        'equipamentos': 'list[EquipamentoIntervencaoDto]',
        'data_hora_inicio': 'datetime',
        'data_hora_fim': 'datetime',
        'periodicidade': 'str',
        'natureza': 'str',
        'classificacao': 'str',
        'justificativa_fora_prazo': 'str',
        'tipo': 'int',
        'caracterizacao': 'str',
        'intervencao_aproveitamento': 'str',
        'intervencao_inclusao_servico': 'str',
        'intervencao_suspensa_ons': 'str',
        'elevado_risco_desligamento': 'str',
        'depende_condicoes_climaticas': 'str',
        'execucao_periodo_noturno': 'str',
        'postergacao_traz_risco': 'bool',
        'acarreta_perdas_multiplas': 'bool',
        'envolve_rele_protecao': 'bool'
    }

    attribute_map = {
        'numero_ons': 'numeroONS',
        'numero_agente': 'numeroAgente',
        'data_hora_solicitacao': 'dataHoraSolicitacao',
        'situacao': 'situacao',
        'nome_centro_responsavel': 'nomeCentroResponsavel',
        'nome_agente_solicitante': 'nomeAgenteSolicitante',
        'nome_agente_responsavel': 'nomeAgenteResponsavel',
        'malha': 'malha',
        'servicos': 'servicos',
        'observacoes': 'observacoes',
        'equipamentos': 'equipamentos',
        'data_hora_inicio': 'dataHoraInicio',
        'data_hora_fim': 'dataHoraFim',
        'periodicidade': 'periodicidade',
        'natureza': 'natureza',
        'classificacao': 'classificacao',
        'justificativa_fora_prazo': 'justificativaForaPrazo',
        'tipo': 'tipo',
        'caracterizacao': 'caracterizacao',
        'intervencao_aproveitamento': 'intervencaoAproveitamento',
        'intervencao_inclusao_servico': 'intervencaoInclusaoServico',
        'intervencao_suspensa_ons': 'intervencaoSuspensaONS',
        'elevado_risco_desligamento': 'elevadoRiscoDesligamento',
        'depende_condicoes_climaticas': 'dependeCondicoesClimaticas',
        'execucao_periodo_noturno': 'execucaoPeriodoNoturno',
        'postergacao_traz_risco': 'postergacaoTrazRisco',
        'acarreta_perdas_multiplas': 'acarretaPerdasMultiplas',
        'envolve_rele_protecao': 'envolveReleProtecao'
    }

    def __init__(self, numero_ons=None, numero_agente=None, data_hora_solicitacao=None, situacao=None, nome_centro_responsavel=None, nome_agente_solicitante=None, nome_agente_responsavel=None, malha=None, servicos=None, observacoes=None, equipamentos=None, data_hora_inicio=None, data_hora_fim=None, periodicidade=None, natureza=None, classificacao=None, justificativa_fora_prazo=None, tipo=None, caracterizacao=None, intervencao_aproveitamento=None, intervencao_inclusao_servico=None, intervencao_suspensa_ons=None, elevado_risco_desligamento=None, depende_condicoes_climaticas=None, execucao_periodo_noturno=None, postergacao_traz_risco=None, acarreta_perdas_multiplas=None, envolve_rele_protecao=None):  # noqa: E501
        """IntervencaoDto - a model defined in Swagger"""  # noqa: E501
        self._numero_ons = None
        self._numero_agente = None
        self._data_hora_solicitacao = None
        self._situacao = None
        self._nome_centro_responsavel = None
        self._nome_agente_solicitante = None
        self._nome_agente_responsavel = None
        self._malha = None
        self._servicos = None
        self._observacoes = None
        self._equipamentos = None
        self._data_hora_inicio = None
        self._data_hora_fim = None
        self._periodicidade = None
        self._natureza = None
        self._classificacao = None
        self._justificativa_fora_prazo = None
        self._tipo = None
        self._caracterizacao = None
        self._intervencao_aproveitamento = None
        self._intervencao_inclusao_servico = None
        self._intervencao_suspensa_ons = None
        self._elevado_risco_desligamento = None
        self._depende_condicoes_climaticas = None
        self._execucao_periodo_noturno = None
        self._postergacao_traz_risco = None
        self._acarreta_perdas_multiplas = None
        self._envolve_rele_protecao = None
        self.discriminator = None
        if numero_ons is not None:
            self.numero_ons = numero_ons
        if numero_agente is not None:
            self.numero_agente = numero_agente
        if data_hora_solicitacao is not None:
            self.data_hora_solicitacao = data_hora_solicitacao
        if situacao is not None:
            self.situacao = situacao
        if nome_centro_responsavel is not None:
            self.nome_centro_responsavel = nome_centro_responsavel
        if nome_agente_solicitante is not None:
            self.nome_agente_solicitante = nome_agente_solicitante
        if nome_agente_responsavel is not None:
            self.nome_agente_responsavel = nome_agente_responsavel
        if malha is not None:
            self.malha = malha
        if servicos is not None:
            self.servicos = servicos
        if observacoes is not None:
            self.observacoes = observacoes
        if equipamentos is not None:
            self.equipamentos = equipamentos
        if data_hora_inicio is not None:
            self.data_hora_inicio = data_hora_inicio
        if data_hora_fim is not None:
            self.data_hora_fim = data_hora_fim
        if periodicidade is not None:
            self.periodicidade = periodicidade
        if natureza is not None:
            self.natureza = natureza
        if classificacao is not None:
            self.classificacao = classificacao
        if justificativa_fora_prazo is not None:
            self.justificativa_fora_prazo = justificativa_fora_prazo
        if tipo is not None:
            self.tipo = tipo
        if caracterizacao is not None:
            self.caracterizacao = caracterizacao
        if intervencao_aproveitamento is not None:
            self.intervencao_aproveitamento = intervencao_aproveitamento
        if intervencao_inclusao_servico is not None:
            self.intervencao_inclusao_servico = intervencao_inclusao_servico
        if intervencao_suspensa_ons is not None:
            self.intervencao_suspensa_ons = intervencao_suspensa_ons
        if elevado_risco_desligamento is not None:
            self.elevado_risco_desligamento = elevado_risco_desligamento
        if depende_condicoes_climaticas is not None:
            self.depende_condicoes_climaticas = depende_condicoes_climaticas
        if execucao_periodo_noturno is not None:
            self.execucao_periodo_noturno = execucao_periodo_noturno
        if postergacao_traz_risco is not None:
            self.postergacao_traz_risco = postergacao_traz_risco
        if acarreta_perdas_multiplas is not None:
            self.acarreta_perdas_multiplas = acarreta_perdas_multiplas
        if envolve_rele_protecao is not None:
            self.envolve_rele_protecao = envolve_rele_protecao

    @property
    def numero_ons(self):
        """Gets the numero_ons of this IntervencaoDto.  # noqa: E501

        Número da intervenção no ONS.  # noqa: E501

        :return: The numero_ons of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._numero_ons

    @numero_ons.setter
    def numero_ons(self, numero_ons):
        """Sets the numero_ons of this IntervencaoDto.

        Número da intervenção no ONS.  # noqa: E501

        :param numero_ons: The numero_ons of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._numero_ons = numero_ons

    @property
    def numero_agente(self):
        """Gets the numero_agente of this IntervencaoDto.  # noqa: E501

        Número do agente.  # noqa: E501

        :return: The numero_agente of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._numero_agente

    @numero_agente.setter
    def numero_agente(self, numero_agente):
        """Sets the numero_agente of this IntervencaoDto.

        Número do agente.  # noqa: E501

        :param numero_agente: The numero_agente of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._numero_agente = numero_agente

    @property
    def data_hora_solicitacao(self):
        """Gets the data_hora_solicitacao of this IntervencaoDto.  # noqa: E501

        Data e hora da solicitação.  # noqa: E501

        :return: The data_hora_solicitacao of this IntervencaoDto.  # noqa: E501
        :rtype: datetime
        """
        return self._data_hora_solicitacao

    @data_hora_solicitacao.setter
    def data_hora_solicitacao(self, data_hora_solicitacao):
        """Sets the data_hora_solicitacao of this IntervencaoDto.

        Data e hora da solicitação.  # noqa: E501

        :param data_hora_solicitacao: The data_hora_solicitacao of this IntervencaoDto.  # noqa: E501
        :type: datetime
        """

        self._data_hora_solicitacao = data_hora_solicitacao

    @property
    def situacao(self):
        """Gets the situacao of this IntervencaoDto.  # noqa: E501

        Situação da intervenção.  # noqa: E501

        :return: The situacao of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._situacao

    @situacao.setter
    def situacao(self, situacao):
        """Sets the situacao of this IntervencaoDto.

        Situação da intervenção.  # noqa: E501

        :param situacao: The situacao of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._situacao = situacao

    @property
    def nome_centro_responsavel(self):
        """Gets the nome_centro_responsavel of this IntervencaoDto.  # noqa: E501

        Nome do centro responsa´vel.  # noqa: E501

        :return: The nome_centro_responsavel of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._nome_centro_responsavel

    @nome_centro_responsavel.setter
    def nome_centro_responsavel(self, nome_centro_responsavel):
        """Sets the nome_centro_responsavel of this IntervencaoDto.

        Nome do centro responsa´vel.  # noqa: E501

        :param nome_centro_responsavel: The nome_centro_responsavel of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._nome_centro_responsavel = nome_centro_responsavel

    @property
    def nome_agente_solicitante(self):
        """Gets the nome_agente_solicitante of this IntervencaoDto.  # noqa: E501

        Nome do agente solicitante.  # noqa: E501

        :return: The nome_agente_solicitante of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._nome_agente_solicitante

    @nome_agente_solicitante.setter
    def nome_agente_solicitante(self, nome_agente_solicitante):
        """Sets the nome_agente_solicitante of this IntervencaoDto.

        Nome do agente solicitante.  # noqa: E501

        :param nome_agente_solicitante: The nome_agente_solicitante of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._nome_agente_solicitante = nome_agente_solicitante

    @property
    def nome_agente_responsavel(self):
        """Gets the nome_agente_responsavel of this IntervencaoDto.  # noqa: E501

        Nome do agente responsável.  # noqa: E501

        :return: The nome_agente_responsavel of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._nome_agente_responsavel

    @nome_agente_responsavel.setter
    def nome_agente_responsavel(self, nome_agente_responsavel):
        """Sets the nome_agente_responsavel of this IntervencaoDto.

        Nome do agente responsável.  # noqa: E501

        :param nome_agente_responsavel: The nome_agente_responsavel of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._nome_agente_responsavel = nome_agente_responsavel

    @property
    def malha(self):
        """Gets the malha of this IntervencaoDto.  # noqa: E501

        Malha associada a intervenção.  # noqa: E501

        :return: The malha of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._malha

    @malha.setter
    def malha(self, malha):
        """Sets the malha of this IntervencaoDto.

        Malha associada a intervenção.  # noqa: E501

        :param malha: The malha of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._malha = malha

    @property
    def servicos(self):
        """Gets the servicos of this IntervencaoDto.  # noqa: E501

        Serviços.  # noqa: E501

        :return: The servicos of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._servicos

    @servicos.setter
    def servicos(self, servicos):
        """Sets the servicos of this IntervencaoDto.

        Serviços.  # noqa: E501

        :param servicos: The servicos of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._servicos = servicos

    @property
    def observacoes(self):
        """Gets the observacoes of this IntervencaoDto.  # noqa: E501

        Observações.  # noqa: E501

        :return: The observacoes of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._observacoes

    @observacoes.setter
    def observacoes(self, observacoes):
        """Sets the observacoes of this IntervencaoDto.

        Observações.  # noqa: E501

        :param observacoes: The observacoes of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._observacoes = observacoes

    @property
    def equipamentos(self):
        """Gets the equipamentos of this IntervencaoDto.  # noqa: E501

        Equipamentos associados a intervenção.  # noqa: E501

        :return: The equipamentos of this IntervencaoDto.  # noqa: E501
        :rtype: list[EquipamentoIntervencaoDto]
        """
        return self._equipamentos

    @equipamentos.setter
    def equipamentos(self, equipamentos):
        """Sets the equipamentos of this IntervencaoDto.

        Equipamentos associados a intervenção.  # noqa: E501

        :param equipamentos: The equipamentos of this IntervencaoDto.  # noqa: E501
        :type: list[EquipamentoIntervencaoDto]
        """

        self._equipamentos = equipamentos

    @property
    def data_hora_inicio(self):
        """Gets the data_hora_inicio of this IntervencaoDto.  # noqa: E501

        Data e hora de início.  # noqa: E501

        :return: The data_hora_inicio of this IntervencaoDto.  # noqa: E501
        :rtype: datetime
        """
        return self._data_hora_inicio

    @data_hora_inicio.setter
    def data_hora_inicio(self, data_hora_inicio):
        """Sets the data_hora_inicio of this IntervencaoDto.

        Data e hora de início.  # noqa: E501

        :param data_hora_inicio: The data_hora_inicio of this IntervencaoDto.  # noqa: E501
        :type: datetime
        """

        self._data_hora_inicio = data_hora_inicio

    @property
    def data_hora_fim(self):
        """Gets the data_hora_fim of this IntervencaoDto.  # noqa: E501

        Data e hora fim.  # noqa: E501

        :return: The data_hora_fim of this IntervencaoDto.  # noqa: E501
        :rtype: datetime
        """
        return self._data_hora_fim

    @data_hora_fim.setter
    def data_hora_fim(self, data_hora_fim):
        """Sets the data_hora_fim of this IntervencaoDto.

        Data e hora fim.  # noqa: E501

        :param data_hora_fim: The data_hora_fim of this IntervencaoDto.  # noqa: E501
        :type: datetime
        """

        self._data_hora_fim = data_hora_fim

    @property
    def periodicidade(self):
        """Gets the periodicidade of this IntervencaoDto.  # noqa: E501

        Periodicidade.  # noqa: E501

        :return: The periodicidade of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._periodicidade

    @periodicidade.setter
    def periodicidade(self, periodicidade):
        """Sets the periodicidade of this IntervencaoDto.

        Periodicidade.  # noqa: E501

        :param periodicidade: The periodicidade of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._periodicidade = periodicidade

    @property
    def natureza(self):
        """Gets the natureza of this IntervencaoDto.  # noqa: E501

        Natureza.  # noqa: E501

        :return: The natureza of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._natureza

    @natureza.setter
    def natureza(self, natureza):
        """Sets the natureza of this IntervencaoDto.

        Natureza.  # noqa: E501

        :param natureza: The natureza of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._natureza = natureza

    @property
    def classificacao(self):
        """Gets the classificacao of this IntervencaoDto.  # noqa: E501

        Classificação.  # noqa: E501

        :return: The classificacao of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._classificacao

    @classificacao.setter
    def classificacao(self, classificacao):
        """Sets the classificacao of this IntervencaoDto.

        Classificação.  # noqa: E501

        :param classificacao: The classificacao of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._classificacao = classificacao

    @property
    def justificativa_fora_prazo(self):
        """Gets the justificativa_fora_prazo of this IntervencaoDto.  # noqa: E501

        Justificativa fora do prazo.  # noqa: E501

        :return: The justificativa_fora_prazo of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._justificativa_fora_prazo

    @justificativa_fora_prazo.setter
    def justificativa_fora_prazo(self, justificativa_fora_prazo):
        """Sets the justificativa_fora_prazo of this IntervencaoDto.

        Justificativa fora do prazo.  # noqa: E501

        :param justificativa_fora_prazo: The justificativa_fora_prazo of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._justificativa_fora_prazo = justificativa_fora_prazo

    @property
    def tipo(self):
        """Gets the tipo of this IntervencaoDto.  # noqa: E501

        Tipo.  # noqa: E501

        :return: The tipo of this IntervencaoDto.  # noqa: E501
        :rtype: int
        """
        return self._tipo

    @tipo.setter
    def tipo(self, tipo):
        """Sets the tipo of this IntervencaoDto.

        Tipo.  # noqa: E501

        :param tipo: The tipo of this IntervencaoDto.  # noqa: E501
        :type: int
        """

        self._tipo = tipo

    @property
    def caracterizacao(self):
        """Gets the caracterizacao of this IntervencaoDto.  # noqa: E501

        Caracterização.  # noqa: E501

        :return: The caracterizacao of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._caracterizacao

    @caracterizacao.setter
    def caracterizacao(self, caracterizacao):
        """Sets the caracterizacao of this IntervencaoDto.

        Caracterização.  # noqa: E501

        :param caracterizacao: The caracterizacao of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._caracterizacao = caracterizacao

    @property
    def intervencao_aproveitamento(self):
        """Gets the intervencao_aproveitamento of this IntervencaoDto.  # noqa: E501

        Intervenção do aproveitamento.  # noqa: E501

        :return: The intervencao_aproveitamento of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._intervencao_aproveitamento

    @intervencao_aproveitamento.setter
    def intervencao_aproveitamento(self, intervencao_aproveitamento):
        """Sets the intervencao_aproveitamento of this IntervencaoDto.

        Intervenção do aproveitamento.  # noqa: E501

        :param intervencao_aproveitamento: The intervencao_aproveitamento of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._intervencao_aproveitamento = intervencao_aproveitamento

    @property
    def intervencao_inclusao_servico(self):
        """Gets the intervencao_inclusao_servico of this IntervencaoDto.  # noqa: E501

        Intervenção de inclusão de serviço.  # noqa: E501

        :return: The intervencao_inclusao_servico of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._intervencao_inclusao_servico

    @intervencao_inclusao_servico.setter
    def intervencao_inclusao_servico(self, intervencao_inclusao_servico):
        """Sets the intervencao_inclusao_servico of this IntervencaoDto.

        Intervenção de inclusão de serviço.  # noqa: E501

        :param intervencao_inclusao_servico: The intervencao_inclusao_servico of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._intervencao_inclusao_servico = intervencao_inclusao_servico

    @property
    def intervencao_suspensa_ons(self):
        """Gets the intervencao_suspensa_ons of this IntervencaoDto.  # noqa: E501

        Intervenção suspensa ONS.  # noqa: E501

        :return: The intervencao_suspensa_ons of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._intervencao_suspensa_ons

    @intervencao_suspensa_ons.setter
    def intervencao_suspensa_ons(self, intervencao_suspensa_ons):
        """Sets the intervencao_suspensa_ons of this IntervencaoDto.

        Intervenção suspensa ONS.  # noqa: E501

        :param intervencao_suspensa_ons: The intervencao_suspensa_ons of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._intervencao_suspensa_ons = intervencao_suspensa_ons

    @property
    def elevado_risco_desligamento(self):
        """Gets the elevado_risco_desligamento of this IntervencaoDto.  # noqa: E501

        Elevado risco de desligamento.  # noqa: E501

        :return: The elevado_risco_desligamento of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._elevado_risco_desligamento

    @elevado_risco_desligamento.setter
    def elevado_risco_desligamento(self, elevado_risco_desligamento):
        """Sets the elevado_risco_desligamento of this IntervencaoDto.

        Elevado risco de desligamento.  # noqa: E501

        :param elevado_risco_desligamento: The elevado_risco_desligamento of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._elevado_risco_desligamento = elevado_risco_desligamento

    @property
    def depende_condicoes_climaticas(self):
        """Gets the depende_condicoes_climaticas of this IntervencaoDto.  # noqa: E501

        Depende de condições climáticas.  # noqa: E501

        :return: The depende_condicoes_climaticas of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._depende_condicoes_climaticas

    @depende_condicoes_climaticas.setter
    def depende_condicoes_climaticas(self, depende_condicoes_climaticas):
        """Sets the depende_condicoes_climaticas of this IntervencaoDto.

        Depende de condições climáticas.  # noqa: E501

        :param depende_condicoes_climaticas: The depende_condicoes_climaticas of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._depende_condicoes_climaticas = depende_condicoes_climaticas

    @property
    def execucao_periodo_noturno(self):
        """Gets the execucao_periodo_noturno of this IntervencaoDto.  # noqa: E501

        Execução no período noturno.  # noqa: E501

        :return: The execucao_periodo_noturno of this IntervencaoDto.  # noqa: E501
        :rtype: str
        """
        return self._execucao_periodo_noturno

    @execucao_periodo_noturno.setter
    def execucao_periodo_noturno(self, execucao_periodo_noturno):
        """Sets the execucao_periodo_noturno of this IntervencaoDto.

        Execução no período noturno.  # noqa: E501

        :param execucao_periodo_noturno: The execucao_periodo_noturno of this IntervencaoDto.  # noqa: E501
        :type: str
        """

        self._execucao_periodo_noturno = execucao_periodo_noturno

    @property
    def postergacao_traz_risco(self):
        """Gets the postergacao_traz_risco of this IntervencaoDto.  # noqa: E501

        Postageração traz risco de desligamento.  # noqa: E501

        :return: The postergacao_traz_risco of this IntervencaoDto.  # noqa: E501
        :rtype: bool
        """
        return self._postergacao_traz_risco

    @postergacao_traz_risco.setter
    def postergacao_traz_risco(self, postergacao_traz_risco):
        """Sets the postergacao_traz_risco of this IntervencaoDto.

        Postageração traz risco de desligamento.  # noqa: E501

        :param postergacao_traz_risco: The postergacao_traz_risco of this IntervencaoDto.  # noqa: E501
        :type: bool
        """

        self._postergacao_traz_risco = postergacao_traz_risco

    @property
    def acarreta_perdas_multiplas(self):
        """Gets the acarreta_perdas_multiplas of this IntervencaoDto.  # noqa: E501

        Acarreta múltiplias perdas.  # noqa: E501

        :return: The acarreta_perdas_multiplas of this IntervencaoDto.  # noqa: E501
        :rtype: bool
        """
        return self._acarreta_perdas_multiplas

    @acarreta_perdas_multiplas.setter
    def acarreta_perdas_multiplas(self, acarreta_perdas_multiplas):
        """Sets the acarreta_perdas_multiplas of this IntervencaoDto.

        Acarreta múltiplias perdas.  # noqa: E501

        :param acarreta_perdas_multiplas: The acarreta_perdas_multiplas of this IntervencaoDto.  # noqa: E501
        :type: bool
        """

        self._acarreta_perdas_multiplas = acarreta_perdas_multiplas

    @property
    def envolve_rele_protecao(self):
        """Gets the envolve_rele_protecao of this IntervencaoDto.  # noqa: E501

        Envolve relê de proteção.  # noqa: E501

        :return: The envolve_rele_protecao of this IntervencaoDto.  # noqa: E501
        :rtype: bool
        """
        return self._envolve_rele_protecao

    @envolve_rele_protecao.setter
    def envolve_rele_protecao(self, envolve_rele_protecao):
        """Sets the envolve_rele_protecao of this IntervencaoDto.

        Envolve relê de proteção.  # noqa: E501

        :param envolve_rele_protecao: The envolve_rele_protecao of this IntervencaoDto.  # noqa: E501
        :type: bool
        """

        self._envolve_rele_protecao = envolve_rele_protecao

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(IntervencaoDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IntervencaoDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
