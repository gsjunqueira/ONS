# coding: utf-8

"""
    Integração com o SGI-OP

    Api de integração com os dados dos SGI-OP.  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class DadosExecucaoDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'data_liberacao_ons': 'datetime',
        'data_inicio_efetivo': 'datetime',
        'data_entrega_agente': 'datetime',
        'data_autorizacao_operar': 'datetime',
        'data_fim_efetivo': 'datetime'
    }

    attribute_map = {
        'data_liberacao_ons': 'dataLiberacaoONS',
        'data_inicio_efetivo': 'dataInicioEfetivo',
        'data_entrega_agente': 'dataEntregaAgente',
        'data_autorizacao_operar': 'dataAutorizacaoOperar',
        'data_fim_efetivo': 'dataFimEfetivo'
    }

    def __init__(self, data_liberacao_ons=None, data_inicio_efetivo=None, data_entrega_agente=None, data_autorizacao_operar=None, data_fim_efetivo=None):  # noqa: E501
        """DadosExecucaoDto - a model defined in Swagger"""  # noqa: E501
        self._data_liberacao_ons = None
        self._data_inicio_efetivo = None
        self._data_entrega_agente = None
        self._data_autorizacao_operar = None
        self._data_fim_efetivo = None
        self.discriminator = None
        if data_liberacao_ons is not None:
            self.data_liberacao_ons = data_liberacao_ons
        if data_inicio_efetivo is not None:
            self.data_inicio_efetivo = data_inicio_efetivo
        if data_entrega_agente is not None:
            self.data_entrega_agente = data_entrega_agente
        if data_autorizacao_operar is not None:
            self.data_autorizacao_operar = data_autorizacao_operar
        if data_fim_efetivo is not None:
            self.data_fim_efetivo = data_fim_efetivo

    @property
    def data_liberacao_ons(self):
        """Gets the data_liberacao_ons of this DadosExecucaoDto.  # noqa: E501

        Data Liberacao ONS.  # noqa: E501

        :return: The data_liberacao_ons of this DadosExecucaoDto.  # noqa: E501
        :rtype: datetime
        """
        return self._data_liberacao_ons

    @data_liberacao_ons.setter
    def data_liberacao_ons(self, data_liberacao_ons):
        """Sets the data_liberacao_ons of this DadosExecucaoDto.

        Data Liberacao ONS.  # noqa: E501

        :param data_liberacao_ons: The data_liberacao_ons of this DadosExecucaoDto.  # noqa: E501
        :type: datetime
        """

        self._data_liberacao_ons = data_liberacao_ons

    @property
    def data_inicio_efetivo(self):
        """Gets the data_inicio_efetivo of this DadosExecucaoDto.  # noqa: E501

        Data Inicio Efetivo.  # noqa: E501

        :return: The data_inicio_efetivo of this DadosExecucaoDto.  # noqa: E501
        :rtype: datetime
        """
        return self._data_inicio_efetivo

    @data_inicio_efetivo.setter
    def data_inicio_efetivo(self, data_inicio_efetivo):
        """Sets the data_inicio_efetivo of this DadosExecucaoDto.

        Data Inicio Efetivo.  # noqa: E501

        :param data_inicio_efetivo: The data_inicio_efetivo of this DadosExecucaoDto.  # noqa: E501
        :type: datetime
        """

        self._data_inicio_efetivo = data_inicio_efetivo

    @property
    def data_entrega_agente(self):
        """Gets the data_entrega_agente of this DadosExecucaoDto.  # noqa: E501

        Data Entrega Agente.  # noqa: E501

        :return: The data_entrega_agente of this DadosExecucaoDto.  # noqa: E501
        :rtype: datetime
        """
        return self._data_entrega_agente

    @data_entrega_agente.setter
    def data_entrega_agente(self, data_entrega_agente):
        """Sets the data_entrega_agente of this DadosExecucaoDto.

        Data Entrega Agente.  # noqa: E501

        :param data_entrega_agente: The data_entrega_agente of this DadosExecucaoDto.  # noqa: E501
        :type: datetime
        """

        self._data_entrega_agente = data_entrega_agente

    @property
    def data_autorizacao_operar(self):
        """Gets the data_autorizacao_operar of this DadosExecucaoDto.  # noqa: E501

        Data Autorizacao Operar  # noqa: E501

        :return: The data_autorizacao_operar of this DadosExecucaoDto.  # noqa: E501
        :rtype: datetime
        """
        return self._data_autorizacao_operar

    @data_autorizacao_operar.setter
    def data_autorizacao_operar(self, data_autorizacao_operar):
        """Sets the data_autorizacao_operar of this DadosExecucaoDto.

        Data Autorizacao Operar  # noqa: E501

        :param data_autorizacao_operar: The data_autorizacao_operar of this DadosExecucaoDto.  # noqa: E501
        :type: datetime
        """

        self._data_autorizacao_operar = data_autorizacao_operar

    @property
    def data_fim_efetivo(self):
        """Gets the data_fim_efetivo of this DadosExecucaoDto.  # noqa: E501

        Data Fim Efetivo.  # noqa: E501

        :return: The data_fim_efetivo of this DadosExecucaoDto.  # noqa: E501
        :rtype: datetime
        """
        return self._data_fim_efetivo

    @data_fim_efetivo.setter
    def data_fim_efetivo(self, data_fim_efetivo):
        """Sets the data_fim_efetivo of this DadosExecucaoDto.

        Data Fim Efetivo.  # noqa: E501

        :param data_fim_efetivo: The data_fim_efetivo of this DadosExecucaoDto.  # noqa: E501
        :type: datetime
        """

        self._data_fim_efetivo = data_fim_efetivo

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DadosExecucaoDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DadosExecucaoDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
