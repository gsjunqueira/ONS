# coding: utf-8

"""
    Integração com o SGI-OP

    Api de integração com os dados dos SGI-OP.  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class RespostaConsultaSituacaoImportacaoLoteDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'processado': 'bool',
        'numero_solicitacao': 'str',
        'data_solicitacao': 'datetime',
        'data_processamento': 'datetime',
        'total_registros_validos': 'int',
        'total_registros_invalidos': 'int',
        'total_intervencoes_agendadas': 'int',
        'ind_erro': 'bool',
        'mensagem_erro': 'MensagemErroDto'
    }

    attribute_map = {
        'processado': 'processado',
        'numero_solicitacao': 'numeroSolicitacao',
        'data_solicitacao': 'dataSolicitacao',
        'data_processamento': 'dataProcessamento',
        'total_registros_validos': 'totalRegistrosValidos',
        'total_registros_invalidos': 'totalRegistrosInvalidos',
        'total_intervencoes_agendadas': 'totalIntervencoesAgendadas',
        'ind_erro': 'indErro',
        'mensagem_erro': 'mensagemErro'
    }

    def __init__(self, processado=None, numero_solicitacao=None, data_solicitacao=None, data_processamento=None, total_registros_validos=None, total_registros_invalidos=None, total_intervencoes_agendadas=None, ind_erro=None, mensagem_erro=None):  # noqa: E501
        """RespostaConsultaSituacaoImportacaoLoteDto - a model defined in Swagger"""  # noqa: E501
        self._processado = None
        self._numero_solicitacao = None
        self._data_solicitacao = None
        self._data_processamento = None
        self._total_registros_validos = None
        self._total_registros_invalidos = None
        self._total_intervencoes_agendadas = None
        self._ind_erro = None
        self._mensagem_erro = None
        self.discriminator = None
        if processado is not None:
            self.processado = processado
        if numero_solicitacao is not None:
            self.numero_solicitacao = numero_solicitacao
        if data_solicitacao is not None:
            self.data_solicitacao = data_solicitacao
        if data_processamento is not None:
            self.data_processamento = data_processamento
        if total_registros_validos is not None:
            self.total_registros_validos = total_registros_validos
        if total_registros_invalidos is not None:
            self.total_registros_invalidos = total_registros_invalidos
        if total_intervencoes_agendadas is not None:
            self.total_intervencoes_agendadas = total_intervencoes_agendadas
        self.ind_erro = ind_erro
        if mensagem_erro is not None:
            self.mensagem_erro = mensagem_erro

    @property
    def processado(self):
        """Gets the processado of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501

        Indica que o lote foi processado.  # noqa: E501

        :return: The processado of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :rtype: bool
        """
        return self._processado

    @processado.setter
    def processado(self, processado):
        """Sets the processado of this RespostaConsultaSituacaoImportacaoLoteDto.

        Indica que o lote foi processado.  # noqa: E501

        :param processado: The processado of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :type: bool
        """

        self._processado = processado

    @property
    def numero_solicitacao(self):
        """Gets the numero_solicitacao of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501

        Número da solicitação no SGI.  # noqa: E501

        :return: The numero_solicitacao of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :rtype: str
        """
        return self._numero_solicitacao

    @numero_solicitacao.setter
    def numero_solicitacao(self, numero_solicitacao):
        """Sets the numero_solicitacao of this RespostaConsultaSituacaoImportacaoLoteDto.

        Número da solicitação no SGI.  # noqa: E501

        :param numero_solicitacao: The numero_solicitacao of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :type: str
        """

        self._numero_solicitacao = numero_solicitacao

    @property
    def data_solicitacao(self):
        """Gets the data_solicitacao of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501

        Data da solicitação no SGI.  # noqa: E501

        :return: The data_solicitacao of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :rtype: datetime
        """
        return self._data_solicitacao

    @data_solicitacao.setter
    def data_solicitacao(self, data_solicitacao):
        """Sets the data_solicitacao of this RespostaConsultaSituacaoImportacaoLoteDto.

        Data da solicitação no SGI.  # noqa: E501

        :param data_solicitacao: The data_solicitacao of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :type: datetime
        """

        self._data_solicitacao = data_solicitacao

    @property
    def data_processamento(self):
        """Gets the data_processamento of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501

        Data de processamento de a intervenção tiver sido processada.  # noqa: E501

        :return: The data_processamento of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :rtype: datetime
        """
        return self._data_processamento

    @data_processamento.setter
    def data_processamento(self, data_processamento):
        """Sets the data_processamento of this RespostaConsultaSituacaoImportacaoLoteDto.

        Data de processamento de a intervenção tiver sido processada.  # noqa: E501

        :param data_processamento: The data_processamento of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :type: datetime
        """

        self._data_processamento = data_processamento

    @property
    def total_registros_validos(self):
        """Gets the total_registros_validos of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501

        Total de registros válidos.  # noqa: E501

        :return: The total_registros_validos of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :rtype: int
        """
        return self._total_registros_validos

    @total_registros_validos.setter
    def total_registros_validos(self, total_registros_validos):
        """Sets the total_registros_validos of this RespostaConsultaSituacaoImportacaoLoteDto.

        Total de registros válidos.  # noqa: E501

        :param total_registros_validos: The total_registros_validos of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :type: int
        """

        self._total_registros_validos = total_registros_validos

    @property
    def total_registros_invalidos(self):
        """Gets the total_registros_invalidos of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501

        Total de registros inválidos.  # noqa: E501

        :return: The total_registros_invalidos of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :rtype: int
        """
        return self._total_registros_invalidos

    @total_registros_invalidos.setter
    def total_registros_invalidos(self, total_registros_invalidos):
        """Sets the total_registros_invalidos of this RespostaConsultaSituacaoImportacaoLoteDto.

        Total de registros inválidos.  # noqa: E501

        :param total_registros_invalidos: The total_registros_invalidos of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :type: int
        """

        self._total_registros_invalidos = total_registros_invalidos

    @property
    def total_intervencoes_agendadas(self):
        """Gets the total_intervencoes_agendadas of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501

        Total de intervenções agendadas para importação.  # noqa: E501

        :return: The total_intervencoes_agendadas of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :rtype: int
        """
        return self._total_intervencoes_agendadas

    @total_intervencoes_agendadas.setter
    def total_intervencoes_agendadas(self, total_intervencoes_agendadas):
        """Sets the total_intervencoes_agendadas of this RespostaConsultaSituacaoImportacaoLoteDto.

        Total de intervenções agendadas para importação.  # noqa: E501

        :param total_intervencoes_agendadas: The total_intervencoes_agendadas of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :type: int
        """

        self._total_intervencoes_agendadas = total_intervencoes_agendadas

    @property
    def ind_erro(self):
        """Gets the ind_erro of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501

        Indica a existência de erro na resposta.  # noqa: E501

        :return: The ind_erro of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :rtype: bool
        """
        return self._ind_erro

    @ind_erro.setter
    def ind_erro(self, ind_erro):
        """Sets the ind_erro of this RespostaConsultaSituacaoImportacaoLoteDto.

        Indica a existência de erro na resposta.  # noqa: E501

        :param ind_erro: The ind_erro of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :type: bool
        """
        if ind_erro is None:
            raise ValueError("Invalid value for `ind_erro`, must not be `None`")  # noqa: E501

        self._ind_erro = ind_erro

    @property
    def mensagem_erro(self):
        """Gets the mensagem_erro of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501


        :return: The mensagem_erro of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :rtype: MensagemErroDto
        """
        return self._mensagem_erro

    @mensagem_erro.setter
    def mensagem_erro(self, mensagem_erro):
        """Sets the mensagem_erro of this RespostaConsultaSituacaoImportacaoLoteDto.


        :param mensagem_erro: The mensagem_erro of this RespostaConsultaSituacaoImportacaoLoteDto.  # noqa: E501
        :type: MensagemErroDto
        """

        self._mensagem_erro = mensagem_erro

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RespostaConsultaSituacaoImportacaoLoteDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RespostaConsultaSituacaoImportacaoLoteDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
