# coding: utf-8

"""
    API Energia Agora

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: sta-integracao-tec@ons.org.br
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SituacaoReservatorioInner(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'data': 'datetime',
        'subsistema': 'str',
        'bacia': 'str',
        'reservatorio': 'str',
        'reservatorio_max': 'float',
        'reservatorio_ear_verificada_mw_mes': 'float',
        'reservatorio_ear_verificada_porcentagem': 'float',
        'reservatorio_valor_util': 'float',
        'reservatorio_porcentagem': 'float',
        'bacia_max': 'float',
        'bacia_ear_verificada_mw_mes': 'float',
        'bacia_ear_verificada_porcentagem': 'float',
        'bacia_porcentagem': 'float',
        'subsistema_max': 'float',
        'subsistema_ear_verificada_mw_mes': 'float',
        'subsistema_valor_util': 'float',
        'sin_max': 'float',
        'sinear_verificada_mw_mes': 'float',
        'sinear_porcentagem': 'float'
    }

    attribute_map = {
        'data': 'Data',
        'subsistema': 'Subsistema',
        'bacia': 'Bacia',
        'reservatorio': 'Reservatorio',
        'reservatorio_max': 'ReservatorioMax',
        'reservatorio_ear_verificada_mw_mes': 'ReservatorioEARVerificadaMWMes',
        'reservatorio_ear_verificada_porcentagem': 'ReservatorioEARVerificadaPorcentagem',
        'reservatorio_valor_util': 'ReservatorioValorUtil',
        'reservatorio_porcentagem': 'ReservatorioPorcentagem',
        'bacia_max': 'BaciaMax',
        'bacia_ear_verificada_mw_mes': 'BaciaEARVerificadaMWMes',
        'bacia_ear_verificada_porcentagem': 'BaciaEARVerificadaPorcentagem',
        'bacia_porcentagem': 'BaciaPorcentagem',
        'subsistema_max': 'SubsistemaMax',
        'subsistema_ear_verificada_mw_mes': 'SubsistemaEARVerificadaMWMes',
        'subsistema_valor_util': 'SubsistemaValorUtil',
        'sin_max': 'SINMax',
        'sinear_verificada_mw_mes': 'SINEARVerificadaMWMes',
        'sinear_porcentagem': 'SINEARPorcentagem'
    }

    def __init__(self, data=None, subsistema=None, bacia=None, reservatorio=None, reservatorio_max=None, reservatorio_ear_verificada_mw_mes=None, reservatorio_ear_verificada_porcentagem=None, reservatorio_valor_util=None, reservatorio_porcentagem=None, bacia_max=None, bacia_ear_verificada_mw_mes=None, bacia_ear_verificada_porcentagem=None, bacia_porcentagem=None, subsistema_max=None, subsistema_ear_verificada_mw_mes=None, subsistema_valor_util=None, sin_max=None, sinear_verificada_mw_mes=None, sinear_porcentagem=None):  # noqa: E501
        """SituacaoReservatorioInner - a model defined in Swagger"""  # noqa: E501
        self._data = None
        self._subsistema = None
        self._bacia = None
        self._reservatorio = None
        self._reservatorio_max = None
        self._reservatorio_ear_verificada_mw_mes = None
        self._reservatorio_ear_verificada_porcentagem = None
        self._reservatorio_valor_util = None
        self._reservatorio_porcentagem = None
        self._bacia_max = None
        self._bacia_ear_verificada_mw_mes = None
        self._bacia_ear_verificada_porcentagem = None
        self._bacia_porcentagem = None
        self._subsistema_max = None
        self._subsistema_ear_verificada_mw_mes = None
        self._subsistema_valor_util = None
        self._sin_max = None
        self._sinear_verificada_mw_mes = None
        self._sinear_porcentagem = None
        self.discriminator = None
        if data is not None:
            self.data = data
        if subsistema is not None:
            self.subsistema = subsistema
        if bacia is not None:
            self.bacia = bacia
        if reservatorio is not None:
            self.reservatorio = reservatorio
        if reservatorio_max is not None:
            self.reservatorio_max = reservatorio_max
        if reservatorio_ear_verificada_mw_mes is not None:
            self.reservatorio_ear_verificada_mw_mes = reservatorio_ear_verificada_mw_mes
        if reservatorio_ear_verificada_porcentagem is not None:
            self.reservatorio_ear_verificada_porcentagem = reservatorio_ear_verificada_porcentagem
        if reservatorio_valor_util is not None:
            self.reservatorio_valor_util = reservatorio_valor_util
        if reservatorio_porcentagem is not None:
            self.reservatorio_porcentagem = reservatorio_porcentagem
        if bacia_max is not None:
            self.bacia_max = bacia_max
        if bacia_ear_verificada_mw_mes is not None:
            self.bacia_ear_verificada_mw_mes = bacia_ear_verificada_mw_mes
        if bacia_ear_verificada_porcentagem is not None:
            self.bacia_ear_verificada_porcentagem = bacia_ear_verificada_porcentagem
        if bacia_porcentagem is not None:
            self.bacia_porcentagem = bacia_porcentagem
        if subsistema_max is not None:
            self.subsistema_max = subsistema_max
        if subsistema_ear_verificada_mw_mes is not None:
            self.subsistema_ear_verificada_mw_mes = subsistema_ear_verificada_mw_mes
        if subsistema_valor_util is not None:
            self.subsistema_valor_util = subsistema_valor_util
        if sin_max is not None:
            self.sin_max = sin_max
        if sinear_verificada_mw_mes is not None:
            self.sinear_verificada_mw_mes = sinear_verificada_mw_mes
        if sinear_porcentagem is not None:
            self.sinear_porcentagem = sinear_porcentagem

    @property
    def data(self):
        """Gets the data of this SituacaoReservatorioInner.  # noqa: E501


        :return: The data of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: datetime
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this SituacaoReservatorioInner.


        :param data: The data of this SituacaoReservatorioInner.  # noqa: E501
        :type: datetime
        """

        self._data = data

    @property
    def subsistema(self):
        """Gets the subsistema of this SituacaoReservatorioInner.  # noqa: E501


        :return: The subsistema of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: str
        """
        return self._subsistema

    @subsistema.setter
    def subsistema(self, subsistema):
        """Sets the subsistema of this SituacaoReservatorioInner.


        :param subsistema: The subsistema of this SituacaoReservatorioInner.  # noqa: E501
        :type: str
        """

        self._subsistema = subsistema

    @property
    def bacia(self):
        """Gets the bacia of this SituacaoReservatorioInner.  # noqa: E501


        :return: The bacia of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: str
        """
        return self._bacia

    @bacia.setter
    def bacia(self, bacia):
        """Sets the bacia of this SituacaoReservatorioInner.


        :param bacia: The bacia of this SituacaoReservatorioInner.  # noqa: E501
        :type: str
        """

        self._bacia = bacia

    @property
    def reservatorio(self):
        """Gets the reservatorio of this SituacaoReservatorioInner.  # noqa: E501


        :return: The reservatorio of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: str
        """
        return self._reservatorio

    @reservatorio.setter
    def reservatorio(self, reservatorio):
        """Sets the reservatorio of this SituacaoReservatorioInner.


        :param reservatorio: The reservatorio of this SituacaoReservatorioInner.  # noqa: E501
        :type: str
        """

        self._reservatorio = reservatorio

    @property
    def reservatorio_max(self):
        """Gets the reservatorio_max of this SituacaoReservatorioInner.  # noqa: E501


        :return: The reservatorio_max of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: float
        """
        return self._reservatorio_max

    @reservatorio_max.setter
    def reservatorio_max(self, reservatorio_max):
        """Sets the reservatorio_max of this SituacaoReservatorioInner.


        :param reservatorio_max: The reservatorio_max of this SituacaoReservatorioInner.  # noqa: E501
        :type: float
        """

        self._reservatorio_max = reservatorio_max

    @property
    def reservatorio_ear_verificada_mw_mes(self):
        """Gets the reservatorio_ear_verificada_mw_mes of this SituacaoReservatorioInner.  # noqa: E501


        :return: The reservatorio_ear_verificada_mw_mes of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: float
        """
        return self._reservatorio_ear_verificada_mw_mes

    @reservatorio_ear_verificada_mw_mes.setter
    def reservatorio_ear_verificada_mw_mes(self, reservatorio_ear_verificada_mw_mes):
        """Sets the reservatorio_ear_verificada_mw_mes of this SituacaoReservatorioInner.


        :param reservatorio_ear_verificada_mw_mes: The reservatorio_ear_verificada_mw_mes of this SituacaoReservatorioInner.  # noqa: E501
        :type: float
        """

        self._reservatorio_ear_verificada_mw_mes = reservatorio_ear_verificada_mw_mes

    @property
    def reservatorio_ear_verificada_porcentagem(self):
        """Gets the reservatorio_ear_verificada_porcentagem of this SituacaoReservatorioInner.  # noqa: E501


        :return: The reservatorio_ear_verificada_porcentagem of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: float
        """
        return self._reservatorio_ear_verificada_porcentagem

    @reservatorio_ear_verificada_porcentagem.setter
    def reservatorio_ear_verificada_porcentagem(self, reservatorio_ear_verificada_porcentagem):
        """Sets the reservatorio_ear_verificada_porcentagem of this SituacaoReservatorioInner.


        :param reservatorio_ear_verificada_porcentagem: The reservatorio_ear_verificada_porcentagem of this SituacaoReservatorioInner.  # noqa: E501
        :type: float
        """

        self._reservatorio_ear_verificada_porcentagem = reservatorio_ear_verificada_porcentagem

    @property
    def reservatorio_valor_util(self):
        """Gets the reservatorio_valor_util of this SituacaoReservatorioInner.  # noqa: E501


        :return: The reservatorio_valor_util of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: float
        """
        return self._reservatorio_valor_util

    @reservatorio_valor_util.setter
    def reservatorio_valor_util(self, reservatorio_valor_util):
        """Sets the reservatorio_valor_util of this SituacaoReservatorioInner.


        :param reservatorio_valor_util: The reservatorio_valor_util of this SituacaoReservatorioInner.  # noqa: E501
        :type: float
        """

        self._reservatorio_valor_util = reservatorio_valor_util

    @property
    def reservatorio_porcentagem(self):
        """Gets the reservatorio_porcentagem of this SituacaoReservatorioInner.  # noqa: E501


        :return: The reservatorio_porcentagem of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: float
        """
        return self._reservatorio_porcentagem

    @reservatorio_porcentagem.setter
    def reservatorio_porcentagem(self, reservatorio_porcentagem):
        """Sets the reservatorio_porcentagem of this SituacaoReservatorioInner.


        :param reservatorio_porcentagem: The reservatorio_porcentagem of this SituacaoReservatorioInner.  # noqa: E501
        :type: float
        """

        self._reservatorio_porcentagem = reservatorio_porcentagem

    @property
    def bacia_max(self):
        """Gets the bacia_max of this SituacaoReservatorioInner.  # noqa: E501


        :return: The bacia_max of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: float
        """
        return self._bacia_max

    @bacia_max.setter
    def bacia_max(self, bacia_max):
        """Sets the bacia_max of this SituacaoReservatorioInner.


        :param bacia_max: The bacia_max of this SituacaoReservatorioInner.  # noqa: E501
        :type: float
        """

        self._bacia_max = bacia_max

    @property
    def bacia_ear_verificada_mw_mes(self):
        """Gets the bacia_ear_verificada_mw_mes of this SituacaoReservatorioInner.  # noqa: E501


        :return: The bacia_ear_verificada_mw_mes of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: float
        """
        return self._bacia_ear_verificada_mw_mes

    @bacia_ear_verificada_mw_mes.setter
    def bacia_ear_verificada_mw_mes(self, bacia_ear_verificada_mw_mes):
        """Sets the bacia_ear_verificada_mw_mes of this SituacaoReservatorioInner.


        :param bacia_ear_verificada_mw_mes: The bacia_ear_verificada_mw_mes of this SituacaoReservatorioInner.  # noqa: E501
        :type: float
        """

        self._bacia_ear_verificada_mw_mes = bacia_ear_verificada_mw_mes

    @property
    def bacia_ear_verificada_porcentagem(self):
        """Gets the bacia_ear_verificada_porcentagem of this SituacaoReservatorioInner.  # noqa: E501


        :return: The bacia_ear_verificada_porcentagem of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: float
        """
        return self._bacia_ear_verificada_porcentagem

    @bacia_ear_verificada_porcentagem.setter
    def bacia_ear_verificada_porcentagem(self, bacia_ear_verificada_porcentagem):
        """Sets the bacia_ear_verificada_porcentagem of this SituacaoReservatorioInner.


        :param bacia_ear_verificada_porcentagem: The bacia_ear_verificada_porcentagem of this SituacaoReservatorioInner.  # noqa: E501
        :type: float
        """

        self._bacia_ear_verificada_porcentagem = bacia_ear_verificada_porcentagem

    @property
    def bacia_porcentagem(self):
        """Gets the bacia_porcentagem of this SituacaoReservatorioInner.  # noqa: E501


        :return: The bacia_porcentagem of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: float
        """
        return self._bacia_porcentagem

    @bacia_porcentagem.setter
    def bacia_porcentagem(self, bacia_porcentagem):
        """Sets the bacia_porcentagem of this SituacaoReservatorioInner.


        :param bacia_porcentagem: The bacia_porcentagem of this SituacaoReservatorioInner.  # noqa: E501
        :type: float
        """

        self._bacia_porcentagem = bacia_porcentagem

    @property
    def subsistema_max(self):
        """Gets the subsistema_max of this SituacaoReservatorioInner.  # noqa: E501


        :return: The subsistema_max of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: float
        """
        return self._subsistema_max

    @subsistema_max.setter
    def subsistema_max(self, subsistema_max):
        """Sets the subsistema_max of this SituacaoReservatorioInner.


        :param subsistema_max: The subsistema_max of this SituacaoReservatorioInner.  # noqa: E501
        :type: float
        """

        self._subsistema_max = subsistema_max

    @property
    def subsistema_ear_verificada_mw_mes(self):
        """Gets the subsistema_ear_verificada_mw_mes of this SituacaoReservatorioInner.  # noqa: E501


        :return: The subsistema_ear_verificada_mw_mes of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: float
        """
        return self._subsistema_ear_verificada_mw_mes

    @subsistema_ear_verificada_mw_mes.setter
    def subsistema_ear_verificada_mw_mes(self, subsistema_ear_verificada_mw_mes):
        """Sets the subsistema_ear_verificada_mw_mes of this SituacaoReservatorioInner.


        :param subsistema_ear_verificada_mw_mes: The subsistema_ear_verificada_mw_mes of this SituacaoReservatorioInner.  # noqa: E501
        :type: float
        """

        self._subsistema_ear_verificada_mw_mes = subsistema_ear_verificada_mw_mes

    @property
    def subsistema_valor_util(self):
        """Gets the subsistema_valor_util of this SituacaoReservatorioInner.  # noqa: E501


        :return: The subsistema_valor_util of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: float
        """
        return self._subsistema_valor_util

    @subsistema_valor_util.setter
    def subsistema_valor_util(self, subsistema_valor_util):
        """Sets the subsistema_valor_util of this SituacaoReservatorioInner.


        :param subsistema_valor_util: The subsistema_valor_util of this SituacaoReservatorioInner.  # noqa: E501
        :type: float
        """

        self._subsistema_valor_util = subsistema_valor_util

    @property
    def sin_max(self):
        """Gets the sin_max of this SituacaoReservatorioInner.  # noqa: E501


        :return: The sin_max of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: float
        """
        return self._sin_max

    @sin_max.setter
    def sin_max(self, sin_max):
        """Sets the sin_max of this SituacaoReservatorioInner.


        :param sin_max: The sin_max of this SituacaoReservatorioInner.  # noqa: E501
        :type: float
        """

        self._sin_max = sin_max

    @property
    def sinear_verificada_mw_mes(self):
        """Gets the sinear_verificada_mw_mes of this SituacaoReservatorioInner.  # noqa: E501


        :return: The sinear_verificada_mw_mes of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: float
        """
        return self._sinear_verificada_mw_mes

    @sinear_verificada_mw_mes.setter
    def sinear_verificada_mw_mes(self, sinear_verificada_mw_mes):
        """Sets the sinear_verificada_mw_mes of this SituacaoReservatorioInner.


        :param sinear_verificada_mw_mes: The sinear_verificada_mw_mes of this SituacaoReservatorioInner.  # noqa: E501
        :type: float
        """

        self._sinear_verificada_mw_mes = sinear_verificada_mw_mes

    @property
    def sinear_porcentagem(self):
        """Gets the sinear_porcentagem of this SituacaoReservatorioInner.  # noqa: E501


        :return: The sinear_porcentagem of this SituacaoReservatorioInner.  # noqa: E501
        :rtype: float
        """
        return self._sinear_porcentagem

    @sinear_porcentagem.setter
    def sinear_porcentagem(self, sinear_porcentagem):
        """Sets the sinear_porcentagem of this SituacaoReservatorioInner.


        :param sinear_porcentagem: The sinear_porcentagem of this SituacaoReservatorioInner.  # noqa: E501
        :type: float
        """

        self._sinear_porcentagem = sinear_porcentagem

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SituacaoReservatorioInner, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SituacaoReservatorioInner):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
