# coding: utf-8

"""
    API Energia Agora

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: sta-integracao-tec@ons.org.br
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class Intercambio(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'internacional_sul': 'float',
        'sul_sudeste': 'float',
        'sudeste_nordeste': 'float',
        'sudeste_norte_fic': 'float',
        'norte_norte_fic': 'float',
        'norte_fic_nordeste': 'float'
    }

    attribute_map = {
        'internacional_sul': 'internacional_sul',
        'sul_sudeste': 'sul_sudeste',
        'sudeste_nordeste': 'sudeste_nordeste',
        'sudeste_norte_fic': 'sudeste_norteFic',
        'norte_norte_fic': 'norte_norteFic',
        'norte_fic_nordeste': 'norteFic_nordeste'
    }

    def __init__(self, internacional_sul=None, sul_sudeste=None, sudeste_nordeste=None, sudeste_norte_fic=None, norte_norte_fic=None, norte_fic_nordeste=None):  # noqa: E501
        """Intercambio - a model defined in Swagger"""  # noqa: E501
        self._internacional_sul = None
        self._sul_sudeste = None
        self._sudeste_nordeste = None
        self._sudeste_norte_fic = None
        self._norte_norte_fic = None
        self._norte_fic_nordeste = None
        self.discriminator = None
        if internacional_sul is not None:
            self.internacional_sul = internacional_sul
        if sul_sudeste is not None:
            self.sul_sudeste = sul_sudeste
        if sudeste_nordeste is not None:
            self.sudeste_nordeste = sudeste_nordeste
        if sudeste_norte_fic is not None:
            self.sudeste_norte_fic = sudeste_norte_fic
        if norte_norte_fic is not None:
            self.norte_norte_fic = norte_norte_fic
        if norte_fic_nordeste is not None:
            self.norte_fic_nordeste = norte_fic_nordeste

    @property
    def internacional_sul(self):
        """Gets the internacional_sul of this Intercambio.  # noqa: E501

        Intercâmbio internacional_sul em MW  # noqa: E501

        :return: The internacional_sul of this Intercambio.  # noqa: E501
        :rtype: float
        """
        return self._internacional_sul

    @internacional_sul.setter
    def internacional_sul(self, internacional_sul):
        """Sets the internacional_sul of this Intercambio.

        Intercâmbio internacional_sul em MW  # noqa: E501

        :param internacional_sul: The internacional_sul of this Intercambio.  # noqa: E501
        :type: float
        """

        self._internacional_sul = internacional_sul

    @property
    def sul_sudeste(self):
        """Gets the sul_sudeste of this Intercambio.  # noqa: E501

        Intercâmbio sul_sudeste em MW  # noqa: E501

        :return: The sul_sudeste of this Intercambio.  # noqa: E501
        :rtype: float
        """
        return self._sul_sudeste

    @sul_sudeste.setter
    def sul_sudeste(self, sul_sudeste):
        """Sets the sul_sudeste of this Intercambio.

        Intercâmbio sul_sudeste em MW  # noqa: E501

        :param sul_sudeste: The sul_sudeste of this Intercambio.  # noqa: E501
        :type: float
        """

        self._sul_sudeste = sul_sudeste

    @property
    def sudeste_nordeste(self):
        """Gets the sudeste_nordeste of this Intercambio.  # noqa: E501

        Intercâmbio sudeste_nordeste em MW  # noqa: E501

        :return: The sudeste_nordeste of this Intercambio.  # noqa: E501
        :rtype: float
        """
        return self._sudeste_nordeste

    @sudeste_nordeste.setter
    def sudeste_nordeste(self, sudeste_nordeste):
        """Sets the sudeste_nordeste of this Intercambio.

        Intercâmbio sudeste_nordeste em MW  # noqa: E501

        :param sudeste_nordeste: The sudeste_nordeste of this Intercambio.  # noqa: E501
        :type: float
        """

        self._sudeste_nordeste = sudeste_nordeste

    @property
    def sudeste_norte_fic(self):
        """Gets the sudeste_norte_fic of this Intercambio.  # noqa: E501

        Intercâmbio sudeste_norteFic em MW  # noqa: E501

        :return: The sudeste_norte_fic of this Intercambio.  # noqa: E501
        :rtype: float
        """
        return self._sudeste_norte_fic

    @sudeste_norte_fic.setter
    def sudeste_norte_fic(self, sudeste_norte_fic):
        """Sets the sudeste_norte_fic of this Intercambio.

        Intercâmbio sudeste_norteFic em MW  # noqa: E501

        :param sudeste_norte_fic: The sudeste_norte_fic of this Intercambio.  # noqa: E501
        :type: float
        """

        self._sudeste_norte_fic = sudeste_norte_fic

    @property
    def norte_norte_fic(self):
        """Gets the norte_norte_fic of this Intercambio.  # noqa: E501

        Intercâmbio norte_norteFic em MW  # noqa: E501

        :return: The norte_norte_fic of this Intercambio.  # noqa: E501
        :rtype: float
        """
        return self._norte_norte_fic

    @norte_norte_fic.setter
    def norte_norte_fic(self, norte_norte_fic):
        """Sets the norte_norte_fic of this Intercambio.

        Intercâmbio norte_norteFic em MW  # noqa: E501

        :param norte_norte_fic: The norte_norte_fic of this Intercambio.  # noqa: E501
        :type: float
        """

        self._norte_norte_fic = norte_norte_fic

    @property
    def norte_fic_nordeste(self):
        """Gets the norte_fic_nordeste of this Intercambio.  # noqa: E501

        Intercâmbio norteFic_nordeste em MW  # noqa: E501

        :return: The norte_fic_nordeste of this Intercambio.  # noqa: E501
        :rtype: float
        """
        return self._norte_fic_nordeste

    @norte_fic_nordeste.setter
    def norte_fic_nordeste(self, norte_fic_nordeste):
        """Sets the norte_fic_nordeste of this Intercambio.

        Intercâmbio norteFic_nordeste em MW  # noqa: E501

        :param norte_fic_nordeste: The norte_fic_nordeste of this Intercambio.  # noqa: E501
        :type: float
        """

        self._norte_fic_nordeste = norte_fic_nordeste

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Intercambio, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Intercambio):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
