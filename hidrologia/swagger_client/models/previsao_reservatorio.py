# coding: utf-8

"""
    Hidrologia

    API que fornece dados hidrol√≥gicos  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PrevisaoReservatorio(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'bacia': 'str',
        'agente': 'str',
        'origem': 'str',
        'periodo': 'str',
        'sigla_pmo': 'str',
        'tipo_grandeza': 'str',
        'tipo_previsao': 'str',
        'valor_previsao': 'float',
        'data_inicio_previsao': 'datetime',
        'data_validade_previsao': 'datetime',
        'previsao_oficial': 'bool',
        'identificador_reservatorio': 'str'
    }

    attribute_map = {
        'bacia': 'Bacia',
        'agente': 'Agente',
        'origem': 'Origem',
        'periodo': 'Periodo',
        'sigla_pmo': 'SiglaPMO',
        'tipo_grandeza': 'TipoGrandeza',
        'tipo_previsao': 'TipoPrevisao',
        'valor_previsao': 'ValorPrevisao',
        'data_inicio_previsao': 'DataInicioPrevisao',
        'data_validade_previsao': 'DataValidadePrevisao',
        'previsao_oficial': 'PrevisaoOficial',
        'identificador_reservatorio': 'IdentificadorReservatorio'
    }

    def __init__(self, bacia=None, agente=None, origem=None, periodo=None, sigla_pmo=None, tipo_grandeza=None, tipo_previsao=None, valor_previsao=None, data_inicio_previsao=None, data_validade_previsao=None, previsao_oficial=None, identificador_reservatorio=None):  # noqa: E501
        """PrevisaoReservatorio - a model defined in Swagger"""  # noqa: E501
        self._bacia = None
        self._agente = None
        self._origem = None
        self._periodo = None
        self._sigla_pmo = None
        self._tipo_grandeza = None
        self._tipo_previsao = None
        self._valor_previsao = None
        self._data_inicio_previsao = None
        self._data_validade_previsao = None
        self._previsao_oficial = None
        self._identificador_reservatorio = None
        self.discriminator = None
        if bacia is not None:
            self.bacia = bacia
        if agente is not None:
            self.agente = agente
        if origem is not None:
            self.origem = origem
        if periodo is not None:
            self.periodo = periodo
        if sigla_pmo is not None:
            self.sigla_pmo = sigla_pmo
        if tipo_grandeza is not None:
            self.tipo_grandeza = tipo_grandeza
        if tipo_previsao is not None:
            self.tipo_previsao = tipo_previsao
        if valor_previsao is not None:
            self.valor_previsao = valor_previsao
        if data_inicio_previsao is not None:
            self.data_inicio_previsao = data_inicio_previsao
        if data_validade_previsao is not None:
            self.data_validade_previsao = data_validade_previsao
        if previsao_oficial is not None:
            self.previsao_oficial = previsao_oficial
        if identificador_reservatorio is not None:
            self.identificador_reservatorio = identificador_reservatorio

    @property
    def bacia(self):
        """Gets the bacia of this PrevisaoReservatorio.  # noqa: E501


        :return: The bacia of this PrevisaoReservatorio.  # noqa: E501
        :rtype: str
        """
        return self._bacia

    @bacia.setter
    def bacia(self, bacia):
        """Sets the bacia of this PrevisaoReservatorio.


        :param bacia: The bacia of this PrevisaoReservatorio.  # noqa: E501
        :type: str
        """

        self._bacia = bacia

    @property
    def agente(self):
        """Gets the agente of this PrevisaoReservatorio.  # noqa: E501


        :return: The agente of this PrevisaoReservatorio.  # noqa: E501
        :rtype: str
        """
        return self._agente

    @agente.setter
    def agente(self, agente):
        """Sets the agente of this PrevisaoReservatorio.


        :param agente: The agente of this PrevisaoReservatorio.  # noqa: E501
        :type: str
        """

        self._agente = agente

    @property
    def origem(self):
        """Gets the origem of this PrevisaoReservatorio.  # noqa: E501


        :return: The origem of this PrevisaoReservatorio.  # noqa: E501
        :rtype: str
        """
        return self._origem

    @origem.setter
    def origem(self, origem):
        """Sets the origem of this PrevisaoReservatorio.


        :param origem: The origem of this PrevisaoReservatorio.  # noqa: E501
        :type: str
        """

        self._origem = origem

    @property
    def periodo(self):
        """Gets the periodo of this PrevisaoReservatorio.  # noqa: E501


        :return: The periodo of this PrevisaoReservatorio.  # noqa: E501
        :rtype: str
        """
        return self._periodo

    @periodo.setter
    def periodo(self, periodo):
        """Sets the periodo of this PrevisaoReservatorio.


        :param periodo: The periodo of this PrevisaoReservatorio.  # noqa: E501
        :type: str
        """

        self._periodo = periodo

    @property
    def sigla_pmo(self):
        """Gets the sigla_pmo of this PrevisaoReservatorio.  # noqa: E501


        :return: The sigla_pmo of this PrevisaoReservatorio.  # noqa: E501
        :rtype: str
        """
        return self._sigla_pmo

    @sigla_pmo.setter
    def sigla_pmo(self, sigla_pmo):
        """Sets the sigla_pmo of this PrevisaoReservatorio.


        :param sigla_pmo: The sigla_pmo of this PrevisaoReservatorio.  # noqa: E501
        :type: str
        """

        self._sigla_pmo = sigla_pmo

    @property
    def tipo_grandeza(self):
        """Gets the tipo_grandeza of this PrevisaoReservatorio.  # noqa: E501


        :return: The tipo_grandeza of this PrevisaoReservatorio.  # noqa: E501
        :rtype: str
        """
        return self._tipo_grandeza

    @tipo_grandeza.setter
    def tipo_grandeza(self, tipo_grandeza):
        """Sets the tipo_grandeza of this PrevisaoReservatorio.


        :param tipo_grandeza: The tipo_grandeza of this PrevisaoReservatorio.  # noqa: E501
        :type: str
        """

        self._tipo_grandeza = tipo_grandeza

    @property
    def tipo_previsao(self):
        """Gets the tipo_previsao of this PrevisaoReservatorio.  # noqa: E501


        :return: The tipo_previsao of this PrevisaoReservatorio.  # noqa: E501
        :rtype: str
        """
        return self._tipo_previsao

    @tipo_previsao.setter
    def tipo_previsao(self, tipo_previsao):
        """Sets the tipo_previsao of this PrevisaoReservatorio.


        :param tipo_previsao: The tipo_previsao of this PrevisaoReservatorio.  # noqa: E501
        :type: str
        """

        self._tipo_previsao = tipo_previsao

    @property
    def valor_previsao(self):
        """Gets the valor_previsao of this PrevisaoReservatorio.  # noqa: E501


        :return: The valor_previsao of this PrevisaoReservatorio.  # noqa: E501
        :rtype: float
        """
        return self._valor_previsao

    @valor_previsao.setter
    def valor_previsao(self, valor_previsao):
        """Sets the valor_previsao of this PrevisaoReservatorio.


        :param valor_previsao: The valor_previsao of this PrevisaoReservatorio.  # noqa: E501
        :type: float
        """

        self._valor_previsao = valor_previsao

    @property
    def data_inicio_previsao(self):
        """Gets the data_inicio_previsao of this PrevisaoReservatorio.  # noqa: E501


        :return: The data_inicio_previsao of this PrevisaoReservatorio.  # noqa: E501
        :rtype: datetime
        """
        return self._data_inicio_previsao

    @data_inicio_previsao.setter
    def data_inicio_previsao(self, data_inicio_previsao):
        """Sets the data_inicio_previsao of this PrevisaoReservatorio.


        :param data_inicio_previsao: The data_inicio_previsao of this PrevisaoReservatorio.  # noqa: E501
        :type: datetime
        """

        self._data_inicio_previsao = data_inicio_previsao

    @property
    def data_validade_previsao(self):
        """Gets the data_validade_previsao of this PrevisaoReservatorio.  # noqa: E501


        :return: The data_validade_previsao of this PrevisaoReservatorio.  # noqa: E501
        :rtype: datetime
        """
        return self._data_validade_previsao

    @data_validade_previsao.setter
    def data_validade_previsao(self, data_validade_previsao):
        """Sets the data_validade_previsao of this PrevisaoReservatorio.


        :param data_validade_previsao: The data_validade_previsao of this PrevisaoReservatorio.  # noqa: E501
        :type: datetime
        """

        self._data_validade_previsao = data_validade_previsao

    @property
    def previsao_oficial(self):
        """Gets the previsao_oficial of this PrevisaoReservatorio.  # noqa: E501


        :return: The previsao_oficial of this PrevisaoReservatorio.  # noqa: E501
        :rtype: bool
        """
        return self._previsao_oficial

    @previsao_oficial.setter
    def previsao_oficial(self, previsao_oficial):
        """Sets the previsao_oficial of this PrevisaoReservatorio.


        :param previsao_oficial: The previsao_oficial of this PrevisaoReservatorio.  # noqa: E501
        :type: bool
        """

        self._previsao_oficial = previsao_oficial

    @property
    def identificador_reservatorio(self):
        """Gets the identificador_reservatorio of this PrevisaoReservatorio.  # noqa: E501


        :return: The identificador_reservatorio of this PrevisaoReservatorio.  # noqa: E501
        :rtype: str
        """
        return self._identificador_reservatorio

    @identificador_reservatorio.setter
    def identificador_reservatorio(self, identificador_reservatorio):
        """Sets the identificador_reservatorio of this PrevisaoReservatorio.


        :param identificador_reservatorio: The identificador_reservatorio of this PrevisaoReservatorio.  # noqa: E501
        :type: str
        """

        self._identificador_reservatorio = identificador_reservatorio

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PrevisaoReservatorio, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PrevisaoReservatorio):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
